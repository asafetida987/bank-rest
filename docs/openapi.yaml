{
  "openapi": "3.1.0",
  "info": {
    "title": "Bank API",
    "description": "Документация REST API для Bank API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "API для операций с пользователями"
    },
    {
      "name": "Authorization",
      "description": "API для регистрации и входа"
    },
    {
      "name": "Card",
      "description": "API для операций с картами"
    }
  ],
  "paths": {
    "/api/v1/cards/transfer": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "Перевод средств между картами пользователя",
        "description": "Позволяет перевести средства между картами пользователя",
        "operationId": "transfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Перевод выполнен успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации или карты не принадлежат пользователю",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards/request-block": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "Запрос на блокировку карты пользователя",
        "description": "Позволяет осуществить запрос на блокировку карты пользователя",
        "operationId": "requestBlock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Запрос на блокировку выполнен успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации или карта не принадлежит пользователю",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards/create": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "Создание новой карты",
        "description": "Позволяет админу создать новую карту",
        "operationId": "createNewCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Карта успешно создана",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Регистрация пользователя",
        "description": "Позволяет зарегистироваться пользователю",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Пользователь успешно зарегистрирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации данных запроса",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Обновление токена",
        "description": "Позволяет обновить access токен",
        "operationId": "refresh",
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Выход пользователя",
        "description": "Позволяет осуществить выход пользователя",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Успешный выход",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Вход пользователя",
        "description": "Позволяет осуществить вход пользователю",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Успешный вход",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации данных запроса",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards/block": {
      "patch": {
        "tags": [
          "Card"
        ],
        "summary": "Блокировка карты",
        "description": "Позволяет админу заблокировать карту",
        "operationId": "blockCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Карта успешно заблокирована",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards/activate": {
      "patch": {
        "tags": [
          "Card"
        ],
        "summary": "Активирование карты",
        "description": "Позволяет админу активировать карту",
        "operationId": "activateCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Карта успешно активирована",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение информации о пользователе",
        "description": "Позволяет получить информацию о пользователе по id",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователе успешно получена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации id",
            "content": {
              "application/json": {

              }
            }
          },
          "404": {
            "description": "Пользователь не найден",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Удаление пользователя",
        "description": "Позволяет удалить пользователя по id",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно удален",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации id",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/users/all": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение списка пользователей",
        "description": "Позволяет получить список пользователей по фильтру и с пагинацией",
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1
            }
          },
          {
            "name": "login",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAtFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "createdAtTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователе успешно получена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации данных",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получение информации о картах пользователя",
        "description": "Позволяет получить информацию о картах пользователя",
        "operationId": "getMyCards",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1
            }
          },
          {
            "name": "expiryDateFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expiryDateTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "BLOCKED",
                "EXPIRED"
              ]
            }
          },
          {
            "name": "balanceFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "balanceTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "isRequestBlock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о картах успешно получена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards/{cardId}/balance": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получение информации о балансе карты пользователя",
        "description": "Позволяет получить информацию о балансе карты пользователя",
        "operationId": "getBalance",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о балансе карты пользователя успешно получена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации или карта не принадлежит пользователю",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards/all": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получение информации админом о всех картах",
        "description": "Позволяет получить информацию админом о всех картах",
        "operationId": "getAllCards",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1
            }
          },
          {
            "name": "userLogin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expiryDateFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expiryDateTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "BLOCKED",
                "EXPIRED"
              ]
            }
          },
          {
            "name": "balanceFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "balanceTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "isRequestBlock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о картах успешно получена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/api/v1/cards/{cardId}": {
      "delete": {
        "tags": [
          "Card"
        ],
        "summary": "Удаление карты",
        "description": "Позволяет админу удалить карту",
        "operationId": "deleteCard",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карта успешно удалена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {

              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BalanceResponseDTO": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number"
          }
        }
      },
      "TransferRequestDTO": {
        "type": "object",
        "properties": {
          "cardIdFrom": {
            "type": "integer",
            "format": "int64"
          },
          "cardIdTo": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01
          }
        },
        "required": [
          "amount",
          "cardIdFrom",
          "cardIdTo"
        ]
      },
      "CardRequestDTO": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "cardId"
        ]
      },
      "PagedResponseDTO": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {

            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NewCardRequestDTO": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "ownerId"
        ]
      },
      "UserResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "login": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ROLE_USER",
              "ROLE_ADMIN"
            ]
          }
        }
      },
      "RegisterRequestDTO": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).*$"
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "MessageResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "LoginRequestDTO": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "required": [
          "login",
          "password"
        ]
      }
    }
  }
}